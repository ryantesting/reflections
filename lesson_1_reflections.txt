Q: How did viewing a diff between two versions of a 
file help you see the bug that was introduced?

It isolated parts of the code that were different
so that instead of going through the entire code
I could just view the parts that were different

Q: How could having easy access to the entire history of a 
file make you a more efficient programmer in the long term?

It allows you to easily track changes to see how
your program and code has been changed, so you don't
have to do this manually by looking at all the lines of
code

Q: What do you think are the pros and cons of manually choosing 
when to create a commit, like you do in Git, vs having versions 
automatically saved, like Google docs does?

It is prone to error if you forget to commit. Also different
people will have different ideas of what a good sized
commit is. 

Q: Why do you think some version control systems, like Git, 
allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?

Because some files might rely on one another, so it makes
sense to save the multiple inter-related files together

Q: How can you use the commands git log and git diff to view 
the history of files?

git log lets you look at all the different commits on a file 
and you can use git diff to compare two different versions of
a file

Q: How might using version control make you more confident 
to make changes that could break something?

It will allow you to make changes and just revert back in case
something breaks

Q: Now that you have your workspace set up, what do you want to 
try using Git for?

Storing versions of a website I want to build